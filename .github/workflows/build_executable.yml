name: Build executable version of CLI

on:
  push:
    branches:
      #      - main
      - "CM-22808-Build-CLI-executable"

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python 3.7
        uses: actions/setup-python@v4
        with:
          python-version: '3.7'

      - name: Setup Poetry
        if: ${{ !startsWith(matrix.os, 'windows') }}
        run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python

      - name: Update PATH
        if: ${{ !startsWith(matrix.os, 'windows') }}
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Setup Poetry on Windows
        if: ${{ startsWith(matrix.os, 'windows') }}
        run: (Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | py -

      - name: Update PATH on Windows
        if: ${{ startsWith(matrix.os, 'windows') }}
        # %APPDATA% doesn't work here
        run: echo "C:\Users\runneradmin\AppData\Roaming\Python\Scripts" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install dependencies
        run: poetry install

      - name: Build executable
        run: poetry run pyinstaller pyinstaller.spec

      - name: Test executable
        if: ${{ !startsWith(matrix.os, 'windows') }}
        run: ./dist/cycode --version

      - name: Test executable on Windows
        if: ${{ startsWith(matrix.os, 'windows') }}
        run: Invoke-expression -command ".\dist\cycode.exe --version"

      - uses: actions/upload-artifact@v3
        with:
          name: cycode-cli-${{ matrix.os }}
          path: dist
